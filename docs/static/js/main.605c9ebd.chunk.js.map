{"version":3,"sources":["components/CharacterCard.js","components/CharacterList.js","components/CharacterDetails.js","components/FilterName.js","services/api.js","services/local-storage.js","components/App.js","index.js"],"names":["CharacterCard","props","to","character","id","src","photo","alt","name","title","class","CharacterList","render","userElements","characters","map","length","CharacterDetails","info","status","origin","episodes","FilterName","onSubmit","ev","preventDefault","onChange","handleFilter","value","target","key","type","filterbyName","getApiData","fetch","then","response","json","data","results","image","species","episode","objetToExport","get","defaultData","localStorage","getItem","JSON","parse","set","setItem","stringify","App","useState","ls","setCharacters","setFilterbyName","useEffect","charactersData","sortedCharactersData","sort","a","b","filteredCharacters","filter","toLowerCase","includes","exact","path","characterId","parseInt","match","params","foundCharacter","find","undefined","ReactDOM","document","querySelector"],"mappings":"mOAkBeA,EAhBO,SAACC,GACrB,OACE,cAAC,IAAD,CAAMC,GAAE,qBAAgBD,EAAME,UAAUC,IAAxC,SACE,oCACE,qBACEC,IAAKJ,EAAME,UAAUG,MACrBC,IAAKN,EAAME,UAAUK,KACrBC,MAAOR,EAAME,UAAUK,OAEzB,6BAAKP,EAAME,UAAUK,OACrB,4BAAIP,EAAME,UAAUO,cCMbC,EAhBO,SAACV,GACrB,IAAIW,EAEEC,EAAeZ,EAAMa,WAAWC,KAAI,SAACZ,GACzC,OAAO,cAAC,EAAD,CAAkCA,UAAWA,GAAzBA,EAAUC,OASvC,OALEQ,EADEX,EAAMa,WAAWE,OAAS,EACnBH,EAEA,mDAGJ,kCAAUD,KCWJK,EAxBU,SAAChB,GACxB,OACE,gCACE,eAAC,IAAD,CAAMC,GAAG,IAAT,4BACA,iCACE,6BAAKD,EAAMiB,KAAKV,SAElB,oCACE,qBACEH,IAAKJ,EAAMiB,KAAKZ,MAChBC,IAAKN,EAAMiB,KAAKV,KAChBC,MAAOR,EAAMiB,KAAKV,OAEpB,+BACE,0CAAaP,EAAMiB,KAAKC,UACxB,2CAAclB,EAAMiB,KAAKR,SACzB,0CAAaT,EAAMiB,KAAKE,UACxB,4CAAenB,EAAMiB,KAAKG,oBAftBpB,EAAMiB,KAAKd,KCkBVkB,EAtBI,SAACrB,GAYlB,OACE,sBAAMsB,SAZa,SAACC,GACpBA,EAAGC,kBAWH,SACE,uBACEC,SAVe,SAACF,GACpBvB,EAAM0B,aAAa,CACjBC,MAAOJ,EAAGK,OAAOD,MACjBE,IAAK,UAQHC,KAAK,OACLH,MAAO3B,EAAM+B,kBCENC,EAnBI,WACjB,OAAOC,MAAM,6CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAYL,OAXiBA,EAAKC,QAAQxB,KAAI,SAACZ,GACjC,MAAO,CACLK,KAAML,EAAUK,KAChBF,MAAOH,EAAUqC,MACjB9B,MAAOP,EAAUsC,QACjBtB,OAAQhB,EAAUgB,OAClBC,OAAQjB,EAAUiB,OAAOZ,KACzBa,SAAUlB,EAAUuC,QAAQ1B,OAC5BZ,GAAID,EAAUC,WCMTuC,EALO,CACpBC,IAdU,SAACd,EAAKe,GAChB,IAAMP,EAAOQ,aAAaC,QAAQjB,GAClC,OAAa,OAATQ,EACKO,EAEAG,KAAKC,MAAMX,IAUpBY,IANU,SAACpB,EAAKF,GAChBkB,aAAaK,QAAQrB,EAAKkB,KAAKI,UAAUxB,M,MCuE5ByB,MAlEf,WACE,MAAoCC,mBAASC,EAAGX,IAAI,aAAc,KAAlE,mBAAO9B,EAAP,KAAmB0C,EAAnB,KACA,EAAwCF,mBAASC,EAAGX,IAAI,eAAgB,KAAxE,mBAAOZ,EAAP,KAAqByB,EAArB,KAGAC,qBAAU,WACkB,IAAtB5C,EAAWE,QACbiB,IAAaE,MAAK,SAACwB,GACjB,IAAMC,EAAuB,YAAID,GAAgBE,MAAK,SAACC,EAAGC,GAAJ,OACpDD,EAAEtD,KAAOuD,EAAEvD,KAAO,EAAIsD,EAAEtD,KAAOuD,EAAEvD,MAAQ,EAAI,KAE/CgD,EAAcI,QAGjB,CAAC9C,EAAWE,SAEf0C,qBAAU,WACRH,EAAGL,IAAI,aAAcpC,KACpB,CAACA,IAEJ4C,qBAAU,WACRH,EAAGL,IAAI,eAAgBlB,KACtB,CAACA,IAGJ,IAOMgC,EAAqBlD,EAAWmD,QAAO,SAAC9D,GAC5C,OAAOA,EAAUK,KAAK0D,cAAcC,SAASnC,EAAakC,kBAmB5D,OACE,qCACE,gDACA,eAAC,IAAD,WACE,eAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,CAAY1C,aAhCC,SAACW,GACH,SAAbA,EAAKR,KACP2B,EAAgBnB,EAAKV,QA8BuBI,aAAcA,IACtD,cAAC,EAAD,CAAelB,WAAYkD,OAE7B,cAAC,IAAD,CAAOK,KAAK,0BAA0BzD,OAxBd,SAACX,GAC7B,IAAMqE,EAAcC,SAAStE,EAAMuE,MAAMC,OAAOH,aAC1CI,EAAiB5D,EAAW6D,MAAK,SAACxE,GACtC,OAAOA,EAAUC,KAAOkE,KAG1B,YACqBM,IAAnBF,GACA,UAAGJ,KAAkBrE,EAAMuE,MAAMC,OAAOH,YAEjC,cAAC,EAAD,CAAkBpD,KAAMwD,IAExB,8D,MCzDbG,IAASjE,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFkE,SAASC,cAAc,Y","file":"static/js/main.605c9ebd.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nconst CharacterCard = (props) => {\n  return (\n    <Link to={`/character/${props.character.id}`}>\n      <article>\n        <img\n          src={props.character.photo}\n          alt={props.character.name}\n          title={props.character.name}\n        />\n        <h4>{props.character.name}</h4>\n        <p>{props.character.class}</p>\n      </article>\n    </Link>\n  );\n};\n\nexport default CharacterCard;\n","import CharacterCard from './CharacterCard';\n\nconst CharacterList = (props) => {\n  let render;\n\n  const userElements = props.characters.map((character) => {\n    return <CharacterCard key={character.id} character={character} />;\n  });\n\n  if (props.characters.length > 0) {\n    render = userElements;\n  } else {\n    render = <p>0 characters found</p>;\n  }\n\n  return <section>{render}</section>;\n};\n\nexport default CharacterList;\n","import { Link } from 'react-router-dom';\n\nconst CharacterDetails = (props) => {\n  return (\n    <div key={props.info.id}>\n      <Link to=\"/\">{`< `}Go back</Link>\n      <header>\n        <h2>{props.info.name}</h2>\n      </header>\n      <section>\n        <img\n          src={props.info.photo}\n          alt={props.info.name}\n          title={props.info.name}\n        />\n        <ul>\n          <li>Status: {props.info.status}</li>\n          <li>Species: {props.info.class}</li>\n          <li>Origin: {props.info.origin}</li>\n          <li>Episodes: {props.info.episodes}</li>\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default CharacterDetails;\n","const FilterName = (props) => {\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n  };\n\n  const handleChange = (ev) => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: 'name',\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        value={props.filterbyName}></input>\n    </form>\n  );\n};\n\nexport default FilterName;\n","const getApiData = () => {\n  return fetch(`https://rickandmortyapi.com/api/character`)\n    .then((response) => response.json())\n    .then((data) => {\n      const dataUser = data.results.map((character) => {\n        return {\n          name: character.name,\n          photo: character.image,\n          class: character.species,\n          status: character.status,\n          origin: character.origin.name,\n          episodes: character.episode.length,\n          id: character.id,\n        };\n      });\n      return dataUser;\n    });\n};\n\nexport default getApiData;\n","const get = (key, defaultData) => {\n  const data = localStorage.getItem(key);\n  if (data === null) {\n    return defaultData;\n  } else {\n    return JSON.parse(data);\n  }\n};\n\nconst set = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst objetToExport = {\n  get: get,\n  set: set,\n};\n\nexport default objetToExport;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router';\n\n//components\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport FilterName from './FilterName';\n\n//services\nimport getApiData from '../services/api';\nimport ls from '../services/local-storage';\n\n//styles\nimport '../stylesheets/App.scss';\n\nfunction App() {\n  const [characters, setCharacters] = useState(ls.get('characters', []));\n  const [filterbyName, setFilterbyName] = useState(ls.get('filterbyName', ''));\n\n  //effects\n  useEffect(() => {\n    if (characters.length === 0) {\n      getApiData().then((charactersData) => {\n        const sortedCharactersData = [...charactersData].sort((a, b) =>\n          a.name > b.name ? 1 : a.name < b.name ? -1 : 0\n        );\n        setCharacters(sortedCharactersData);\n      });\n    }\n  }, [characters.length]);\n\n  useEffect(() => {\n    ls.set('characters', characters);\n  }, [characters]);\n\n  useEffect(() => {\n    ls.set('filterbyName', filterbyName);\n  }, [filterbyName]);\n\n  // event handlers\n  const handleFilter = (data) => {\n    if (data.key === 'name') {\n      setFilterbyName(data.value);\n    }\n  };\n\n  //render\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toLowerCase().includes(filterbyName.toLowerCase());\n  });\n\n  const renderCharacterDetail = (props) => {\n    const characterId = parseInt(props.match.params.characterId);\n    const foundCharacter = characters.find((character) => {\n      return character.id === characterId;\n    });\n\n    if (\n      foundCharacter !== undefined &&\n      `${characterId}` === props.match.params.characterId\n    ) {\n      return <CharacterDetails info={foundCharacter} />;\n    } else {\n      return <p>Character not found</p>;\n    }\n  };\n\n  return (\n    <>\n      <h1>Rick and Morty</h1>\n      <Switch>\n        <Route exact path=\"/\">\n          <FilterName handleFilter={handleFilter} filterbyName={filterbyName} />\n          <CharacterList characters={filteredCharacters} />\n        </Route>\n        <Route path=\"/character/:characterId\" render={renderCharacterDetail} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}