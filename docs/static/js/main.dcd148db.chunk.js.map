{"version":3,"sources":["components/CharacterCard.js","components/CharacterList.js","components/CharacterDetails.js","components/FilterName.js","components/FilterSpecies.js","components/Filters.js","images/logo.png","services/api.js","services/local-storage.js","components/App.js","index.js"],"names":["CharacterCard","props","to","character","id","className","src","photo","alt","name","title","class","CharacterList","userElements","characters","map","length","CharacterDetails","info","status","origin","episodes","FilterName","onSubmit","ev","preventDefault","onChange","handleFilter","value","target","key","type","placeholder","filterbyName","FilterSpecies","htmlFor","filterbySpecies","Filters","getApiData","fetch","then","response","json","data","results","image","species","episode","objetToExport","get","defaultData","localStorage","getItem","JSON","parse","set","setItem","stringify","App","useState","ls","setCharacters","setFilterbyName","setFilterbySpecies","useEffect","charactersData","sortedCharactersData","sort","a","b","filteredCharacters","filter","toLowerCase","includes","logo","exact","path","render","characterId","parseInt","match","params","foundCharacter","find","undefined","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.dcd148db.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = (props) => {\n  return (\n    <Link to={`/character/${props.character.id}`}>\n      <article className=\"charactercard\">\n        <img\n          src={props.character.photo}\n          alt={props.character.name}\n          title={props.character.name}\n          className=\"charactercard_img\"\n        />\n        <h4 className=\"charactercard_name\">{props.character.name}</h4>\n        <p className=\"charactercard_class\">{props.character.class}</p>\n      </article>\n    </Link>\n  );\n};\n\nCharacterCard.propTypes = {\n  character: PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    class: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    origin: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    episodes: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n};\n\nexport default CharacterCard;\n","import CharacterCard from './CharacterCard';\n\nconst CharacterList = (props) => {\n  let render;\n\n  const userElements = props.characters.map((character) => {\n    return (\n      <li key={character.id}>\n        <CharacterCard character={character} />\n      </li>\n    );\n  });\n\n  if (props.characters.length > 0) {\n    render = <ul className=\"maincontainer_list\">{userElements}</ul>;\n  } else {\n    render = <p className=\"paragrpahnotfound\">0 characters found</p>;\n  }\n\n  return render;\n};\n\nexport default CharacterList;\n","import { Link } from 'react-router-dom';\n\nconst CharacterDetails = (props) => {\n  return (\n    <div key={props.info.id}>\n      <Link className=\"characterdetaillink\" to=\"/\">\n        {`< `}Go back\n      </Link>\n      <header>\n        <h2 className=\"characterdetail_title\">{props.info.name}</h2>\n      </header>\n      <section className=\"characterdetail_section\">\n        <img\n          src={props.info.photo}\n          alt={props.info.name}\n          title={props.info.name}\n          className=\"characterdetail_section-img\"\n        />\n        <ul className=\"characterdetail_section-list\">\n          <li>\n            <span className=\"characterdetail_section-listele\">Status</span>\n            {props.info.status}\n          </li>\n          <li>\n            <span className=\"characterdetail_section-listele\">Species</span>\n            {props.info.class}\n          </li>\n          <li>\n            <span className=\"characterdetail_section-listele\">Origin</span>\n            {props.info.origin}\n          </li>\n          <li>\n            <span className=\"characterdetail_section-listele\">Episodes</span>\n            {props.info.episodes}\n          </li>\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default CharacterDetails;\n","const FilterName = (props) => {\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n  };\n\n  const handleChange = (ev) => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: 'name',\n    });\n  };\n\n  return (\n    <form className=\"maincontainer_form\" onSubmit={handleSubmit}>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        placeholder=\"search for a character\"\n        value={props.filterbyName}\n        className=\"maincontainer_form-input\"></input>\n    </form>\n  );\n};\n\nexport default FilterName;\n","const FilterSpecies = (props) => {\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n  };\n\n  const handleChange = (ev) => {\n    props.handleFilter({\n      value: ev.target.value,\n      key: 'class',\n    });\n  };\n\n  return (\n    <form className=\"maincontainer_form\" onSubmit={handleSubmit}>\n      <label className=\"maincontainer_label\" htmlFor=\"class\">\n        Species:\n      </label>\n      <select\n        name=\"class\"\n        id=\"class\"\n        onChange={handleChange}\n        value={props.filterbySpecies}\n        className=\"maincontainer_form-input\">\n        <option value=\"\">All</option>\n        <option value=\"Alien\">Alien</option>\n        <option value=\"Human\">Human</option>\n      </select>\n    </form>\n  );\n};\n\nexport default FilterSpecies;\n","import FilterName from './FilterName';\nimport FilterSpecies from './FilterSpecies';\n\nconst Filters = (props) => {\n  return (\n    <section>\n      <FilterName\n        handleFilter={props.handleFilter}\n        filterbyName={props.filterbyName}\n      />\n\n      <FilterSpecies\n        handleFilter={props.handleFilter}\n        filterbySpecies={props.filterbySpecies}\n      />\n    </section>\n  );\n};\n\nexport default Filters;\n","export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","const getApiData = () => {\n  return fetch(`https://rickandmortyapi.com/api/character`)\n    .then((response) => response.json())\n    .then((data) => {\n      const dataUser = data.results.map((character) => {\n        return {\n          name: character.name,\n          photo: character.image,\n          class: character.species,\n          status: character.status,\n          origin: character.origin.name,\n          episodes: character.episode.length,\n          id: character.id,\n        };\n      });\n      return dataUser;\n    });\n};\n\nexport default getApiData;\n","const get = (key, defaultData) => {\n  const data = localStorage.getItem(key);\n  if (data === null) {\n    return defaultData;\n  } else {\n    return JSON.parse(data);\n  }\n};\n\nconst set = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst objetToExport = {\n  get: get,\n  set: set,\n};\n\nexport default objetToExport;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router';\n\n//components\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport Filters from './Filters';\nimport logo from '../images/logo.png';\n\n//services\nimport getApiData from '../services/api';\nimport ls from '../services/local-storage';\n\n//styles\nimport '../stylesheets/index.scss';\n\nfunction App() {\n  const [characters, setCharacters] = useState(ls.get('characters', []));\n  const [filterbyName, setFilterbyName] = useState(ls.get('filterbyName', ''));\n  const [filterbySpecies, setFilterbySpecies] = useState(\n    ls.get('filterbySpecies', '')\n  );\n\n  //effects\n  useEffect(() => {\n    if (characters.length === 0) {\n      getApiData().then((charactersData) => {\n        const sortedCharactersData = [...charactersData].sort((a, b) =>\n          a.name > b.name ? 1 : a.name < b.name ? -1 : 0\n        );\n        setCharacters(sortedCharactersData);\n      });\n    }\n  }, [characters.length]);\n\n  useEffect(() => {\n    ls.set('characters', characters);\n  }, [characters]);\n\n  useEffect(() => {\n    ls.set('filterbyName', filterbyName);\n  }, [filterbyName]);\n\n  useEffect(() => {\n    ls.set('filterbySpecies', filterbySpecies);\n  }, [filterbySpecies]);\n\n  // event handlers\n  const handleFilter = (data) => {\n    if (data.key === 'name') {\n      setFilterbyName(data.value);\n    } else if (data.key === 'class') {\n      setFilterbySpecies(data.value);\n    }\n  };\n\n  //render\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(filterbyName.toLowerCase());\n    })\n    .filter((character) => {\n      return filterbySpecies === ''\n        ? true\n        : character.class === filterbySpecies;\n    });\n\n  const renderCharacterDetail = (props) => {\n    const characterId = parseInt(props.match.params.characterId);\n    const foundCharacter = characters.find((character) => {\n      return character.id === characterId;\n    });\n\n    if (\n      foundCharacter !== undefined &&\n      `${characterId}` === props.match.params.characterId\n    ) {\n      return <CharacterDetails info={foundCharacter} />;\n    } else {\n      return <p>Character not found</p>;\n    }\n  };\n\n  return (\n    <>\n      <section className=\"maincontainer_section1\">\n        <h1 className=\"maincontainer_section1-title\">Rick and Morty</h1>\n        <img\n          src={logo}\n          alt=\"logo\"\n          title=\"Rick and Morty Character Searcher\"\n          className=\"maincontainer_section1-logo\"\n        />\n      </section>\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters\n            handleFilter={handleFilter}\n            filterbyName={filterbyName}\n            filterbySpecies={filterbySpecies}\n          />\n          <CharacterList characters={filteredCharacters} />\n        </Route>\n        <Route path=\"/character/:characterId\" render={renderCharacterDetail} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}